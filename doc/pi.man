PI(1)                       General Commands Manual                      PI(1)

NNAAMMEE
     ppii - Pascal interpreter code translator

SSYYNNOOPPSSIISS
     ppii [--bbllnnppssttuuwwzz] [--ii _n_a_m_e _._._.] _n_a_m_e_._p

DDEESSCCRRIIPPTTIIOONN
     PPii translates the program in the file _n_a_m_e_._p leaving interpreter code in
     the file _o_b_j in the current directory.  The interpreter code can be
     executed using ppxx.  PPiixx performs the functions of ppii and ppxx for `load and
     go' Pascal.

     The following flags are interpreted by ppii; the associated options can
     also be controlled in comments within the program as described in the
     _B_e_r_k_e_l_e_y _P_a_s_c_a_l _U_s_e_r_'_s _M_a_n_u_a_l_.

     --bb      Block buffer the file _o_u_t_p_u_t.

     --ii      Enable the listing for any specified procedures and functions and
             while processing any specified iinncclluuddee files.

     --ll      Make a program listing during translation.

     --nn      Begin each listed iinncclluuddee file on a new page with a banner line.

     --pp      Suppress the post-mortem control flow backtrace if an error
             occurs; suppress statement limit counting.

     --ss      Accept standard Pascal only; non-standard constructs cause
             warning diagnostics.

     --tt      Suppress runtime tests of subrange variables and treat aasssseerrtt
             statements as comments.

     --uu      Card image mode; only the first 72 characters of input lines are
             used.

     --ww      Suppress warning diagnostics.

     --zz      Allow execution profiling with ppxxpp by generating statement
             counters, and arranging for the creation of the profile data file
             _p_m_o_n_._o_u_t when the resulting object is executed.

FFIILLEESS
     _f_i_l_e_._p                 Input file.
     _f_i_l_e_._i                 Include file(s).
     _/_u_s_r_/_l_i_b_/_p_i_2_._*_s_t_r_i_n_g_s  Text of the error messages.
     _/_u_s_r_/_l_i_b_/_h_o_w___p_i_*       Basic usage explanation.
     _o_b_j                    Interpreter code output.

SSEEEE AALLSSOO
     pix(1), px(1), pxp(1), pxref(1)

     _B_e_r_k_e_l_e_y _P_a_s_c_a_l _U_s_e_r_'_s _M_a_n_u_a_l.

DDIIAAGGNNOOSSTTIICCSS
     For a basic explanation do

           pi

     In the diagnostic output of the translator, lines containing syntax
     errors are listed with a flag indicating the point of error.  Diagnostic
     messages indicate the action which the recovery mechanism took in order
     to be able to continue parsing.  Some diagnostics indicate only that the
     input is `malformed.'  This occurs if the recovery can find no simple
     correction to make the input syntactically valid.

     Semantic error diagnostics indicate a line in the source text near the
     point of error.  Some errors evoke more than one diagnostic to help
     pinpoint the error; the follow-up messages begin with an ellipsis `...'.

     The first character of each error message indicates its class:

           E       Fatal error; no code will be generated.
           e       Non-fatal error.
           w       Warning - a potential problem.
           s       Non-standard Pascal construct warning.

     If a severe error occurs which inhibits further processing, the
     translator will give a diagnostic and then `QUIT'.

BBUUGGSS
     The keyword ppaacckkeedd is recognized but has no effect.

     For clarity, semantic errors should be flagged at an appropriate place in
     the source text, and multiple instances of the `same' semantic error
     should be summarized at the end of a pprroocceedduurree or ffuunnccttiioonn rather than
     evoking many diagnostics.

     When iinncclluuddee files are present, diagnostics relating to the last
     procedure in one file may appear after the beginning of the listing of
     the next.

HHIISSTTOORRYY
     The PPii command appeared in 3.0BSD.

BSD 4                            June 6, 1993                            BSD 4
