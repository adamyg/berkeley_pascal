# Berkeley Pascal - top level makefile.
#
#
# Copyright (c) 2020, Adam Young.
# All rights reserved.
#
# The applications are free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# Redistributions of source code must retain the above copyright
# notice, and must be distributed with the license document above.
#
# Redistributions in binary form must reproduce the above copyright
# notice, and must include the license document above in
# the documentation and/or other materials provided with the
# distribution.
#
# The applications are distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# ==end==
#

@SET_MAKE@
ROOT		= @abs_top_builddir@

PACKAGE		= UCSD_Pascal
PKG_BUGREPORT	= @PACKAGE_BUGREPORT@
PKG_NAME	= @PACKAGE_NAME@
PKG_STRING	= @PACKAGE_STRING@
PKG_TARNAME	= @PACKAGE_TARNAME@
PKG_URL		= @PACKAGE_URL@
PKG_VERSION	= @PACKAGE_VERSION@
ifeq ("","$(PKG_VERSION)")
PKG_VERSION	= 1.0.0
endif
PKG_VERSION_1	=$(word 1,$(subst ., ,$(PKG_VERSION)))
PKG_VERSION_2	=$(word 2,$(subst ., ,$(PKG_VERSION)))
PKG_VERSION_3	=$(word 3,$(subst ., ,$(PKG_VERSION)))

PATH_SEPARATOR	= @PATH_SEPARATOR@

build		= @build@
build_alias	= @build_alias@
build_cpu	= @build_cpu@
build_os	= @build_os@
build_vendor	= @build_vendor@

host		= @host@
host_alias	= @host_alias@
host_cpu	= @host_cpu@
host_os 	= @host_os@
host_vendor	= @host_vendor@

target		= @target@
target_alias	= @target_alias@
target_cpu	= @target_cpu@
target_os	= @target_os@
target_vendor	= @target_vendor@

	# directory components
prefix		= @prefix@
exec_prefix	= @exec_prefix@
datarootdir	= @datarootdir@

	# directory results
bindir		= @bindir@
sbindir		= @sbindir@
libexecdir	= @libexecdir@
libdir		= @libdir@
datadir		= @datadir@

        # package directories
pkgname		= winsh
ifeq (rief,$(findstring rief,$(libexecdir)))
pkglibexecdir	= $(libexecdir)
pkglibdir	= $(libdir)
else
pkglibexecdir	= $(libexecdir)/$(pkgname)
pkglibdir	= $(libdir)/$(pkgname)
endif
ifeq (rief,$(findstring rief,$(libexecdir)))
pkgdatadir	= $(datadir)
else
pkgdatadir	= $(datadir)/$(pkgname)
endif

BINDIR		= $(bindir)
SBINDIR		= $(sbindir)
LIBEXECDIR	= $(pkglibexecdir)
LIBDIR		= $(pkglibdir)
DATADIR		= $(pkgdatadir)

top_build_prefix= @top_build_prefix@
top_builddir	= @top_builddir@
top_srcdir	= @top_srcdir@

# File extensions

E=
A=		.a
O=		.o
LP=		lib
E=		.exe

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Directories

D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@
D_INC=		$(ROOT)/include
D_OBJ=		$(ROOT)/objects@TOOLCHAINEXT@
D_LIB=		$(ROOT)/lib@TOOLCHAINEXT@
LW=		$(D_LIB)/$(LP)
# Compilers, programs

CC=		@CC@
AR=		@AR@
RM=		@RM@
RMDIR=		@RMDIR@
CP=		@CP@
RC=		@RC@
PERL=		@PERL@
TAR=		@TAR@
INSTALL=	@INSTALL@
INSTALL_PROGRAM=@INSTALL_PROGRAM@
INSTALL_DATA=	@INSTALL_DATA@

# Common flags

RMFLAGS=	-f
RMDFLAGS=	-rf

BUILDNUMBER=	BUILDNUMBER.in
BUILDINFO=	include/buildinfo.h

# Targets

ifeq ("wcl386","$(CC)")
ifeq ("@TOOLCHAIN@","owc20")
CLBRNAME=	clbr20
MT7RNAME=	mt7r20
PLBRNAME=	plbr20
else
CLBRNAME=	clbr19
MT7RNAME=	mt7r19
PLBRNAME=	plbr19
endif
LIBCLBRPATH=	$(shell which $(CLBRNAME).dll)
LIBMT7RPATH=	$(shell which $(MT7RNAME).dll)
LIBPLBRPATH=	$(shell which $(PLBRNAME).dll)
endif

LIBS=\
	$(LW)compat			\
	$(LW)pc

BINS=\
	$(D_BIN)/eyacc$(E)		\
	$(D_BIN)/byacc$(E)		\
	$(D_BIN)/ex$(E)			\
	$(D_BIN)/pi$(E)			\
	$(D_BIN)/px$(E)			\
	$(D_BIN)/pdx$(E)		\
	$(D_BIN)/pmerge$(E)

IMPORT=
ifeq ("wcl386","$(CC)")
IMPORT+=\
	$(D_BIN)/$(CLBRNAME).dll	\
	$(D_BIN)/$(MT7RNAME).dll	\
	$(D_BIN)/$(PLBRNAME).dll
endif

#########################################################################################
# rules

.DEFAULT:
.PHONY:				all
all:			dirs buildinfo libs bins import doc

# Build support

buildinfo:		$(BUILDINFO)

$(BUILDINFO):		$(BUILDNUMBER) Makefile include/.created
	@sh -c "\
echo // Auto-generated by Makefile >$@; \
echo \#define PASCAL_VERSION          \\\"$(PKG_VERSION)\\\" >>$@; \
echo \#define PASCAL_VERSION_1        $(PKG_VERSION_1) >>$@; \
echo \#define PASCAL_VERSION_2        $(PKG_VERSION_2) >>$@; \
echo \#define PASCAL_VERSION_3        $(PKG_VERSION_3) >>$@; \
echo \#define PASCAL_BUILD_DATE       \\\"$(PKG_BUILD_DATE)\\\" >>$@; \
echo \#define PASCAL_BUILD_NUMBER     \\\"$(PKG_BUILD_NUMBER)\\\" >>$@; \
echo \#define PASCAL_BUILD_BINDIR     \\\"$(BINDIR)\\\" >>$@; \
echo \#define PASCAL_BUILD_SBINDIR    \\\"$(SBINDIR)\\\" >>$@; \
echo \#define PASCAL_BUILD_LIBDIR     \\\"$(LIBDIR)\\\" >>$@; \
echo \#define PASCAL_BUILD_LIBEXECDIR \\\"$(LIBEXECDIR)\\\" >>$@; \
echo \#define PASCAL_BUILD_DATADIR    \\\"$(DATADIR)\\\" >>$@; \
"

PKG_BUILD_DATE=		$(shell date +'%Y%m%d')
PKG_BUILD_NUMBER=	$(shell cat ./$(BUILDNUMBER))

.PHONY:			new_buildnumber
new_buildnumber:
	-chmod +w $(BUILDNUMBER)

$(BUILDNUMBER):		Makefile
	-@sh -c "\
if [ ! -f $(BUILDNUMBER) ]; then echo 1 >$(BUILDNUMBER); fi;\
if [ -w $(BUILDNUMBER) ]; then \
echo incrementing build number ...; \
echo $$(($$(cat $(BUILDNUMBER)) + 1)) >$(BUILDNUMBER);\
fi;\
"
	-chmod -w $(BUILDNUMBER)

# Components

dirs:		$(D_OBJ)/.created $(D_LIB)/.created $(D_BIN)/.created

%/.created:
		-@mkdir $(@D)
		@echo "++ do not delete, managed content ++" > $@

bins:			$(BINS)

$(D_BIN)/%$(E):		libs
		@echo --- building $@
		$(MAKE) -C $(notdir $(basename $@)) $(MAKEFLAGS)

libs:			$(LIBS)

$(LW)%:
		@echo --- building $@
		$(MAKE) -C $(notdir $(basename $@)) $(MAKEFLAGS)

.PHONY:
import:				$(IMPORT)

ifeq ("wcl386","$(CC)")
$(D_BIN)/$(CLBRNAME).dll:	$(LIBCLBRPATH)
		@echo importing $(LIBCLBRPATH)
		@$(CP) -f $(subst /,\,$^) $@

$(D_BIN)/$(MT7RNAME).dll:	$(LIBMT7RPATH)
		@echo importing $(LIBMT7RPATH)
		@$(CP) -f $^ $@

$(D_BIN)/$(PLBRNAME).dll:	$(LIBPLBRPATH)
		@echo importing $(LIBPLBRPATH)
		@$(CP) -f $(subst /,\,$^) $@
endif

.PHONY:
doc:
		$(MAKE) -C doc $(MAKEFLAGS)

install:		all
		-mkdir -p $(BINDIR)
		-mkdir -p $(DATADIR)
		$(INSTALL_PROGRAM) -m 0755 -c -o bin -g bin $(D_BIN)/xxx$(E) $(BINDIR)

clean:
		$(MAKE) -C pmerge clean
		$(MAKE) -C pdx clean
		$(MAKE) -C pi clean
		$(MAKE) -C px clean
		$(MAKE) -C byacc clean
		$(MAKE) -C eyacc clean
		$(MAKE) -C ex clean
		$(MAKE) -C libcompat clean
		$(MAKE) -C libpc clean

vclean:			clean
		-@$(RM) $(RMDFLAGS) $(D_BIN)/* $(D_MACROS)/* $(D_HELP)/* $(D_LIB)/* $(D_OBJ)/*
		-rmdir $(D_BIN) $(D_MACROS) $(D_HELP) $(D_LIB) $(D_OBJ)

distclean:		clean
		$(RM) $(RMFLAGS) config.cache config.log config.status \
			pmerge/Makefile \
			pdx/Makefile \
			pi/Makefile \
			px/Makefile \
			ex/Makefile \
			eyacc/Makefile \
			byacc/Makefile \
			libpc/Makefile \
			libcompat/Makefile \
			include/config.h \
			Makefile

#end
