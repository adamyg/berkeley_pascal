# -*- mode: mak; indent-tabs-mode: t; tab-width: 8 -*-
# libpc makefile.
#
#
# Copyright (c) 2020 - 2022, Adam Young.
# All rights reserved.
#
# The applications are free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# The applications are distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# ==end==
#

@SET_MAKE@
ROOT=		@abs_top_builddir@
top_builddir=	@top_builddir@

# File extensions

C=		.c
O=		.o
H=		.h
A=		.a
LP=		lib

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Compilers, programs

CC=		@CC@
AR=		@AR@
RANLIB= 	@RANLIB@
RM=		@RM@

# Configuration

ifeq ("$(BUILD_TYPE)","")	#default
BUILD_TYPE=	debug
MAKEFLAGS+=	BUILD_TYPE=debug
endif
ifneq ("$(BUILD_TYPE)","release")
RTSUFFIX=d
endif

# Directories

D_INC=		$(ROOT)/include
D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@/$(BUILD_TYPE)
D_OBJ=		$(ROOT)/objects@TOOLCHAINEXT@/$(BUILD_TYPE)/libpc
D_LIB=		$(ROOT)/lib@TOOLCHAINEXT@/$(BUILD_TYPE)

# Common flags

XFLAGS=
CFLAGS=		@CFLAGS@
CWARN=		@CWARN@
ifeq ("gcc","@CC@")
CWARN+=		-Wno-dangling-else -Wno-empty-body
endif
CDEBUG=		@CDEBUG@
CRELEASE=	@CRELEASE@
LDDEBUG=	@LDDEBUG@
LDRELEASE=	@LDRELEASE@

CINCLUDE=	-I. -I$(D_INC) @CINCLUDE@

CEXTRA=		@DEFS@
ifeq ("$(BUILD_TYPE)","release")
CFLAGS+=	$(CRELEASE) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDRELEASE) @LDFLAGS@
else
CFLAGS+=	$(CDEBUG) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDDEBUG) @LDFLAGS@
endif
LDLIBS=		-L$(D_LIB) @LIBS@ @EXTRALIBS@

ARFLAGS=	rcv
RMFLAGS=	-f
RMDFLAGS=	-rf


#########################################################################################
# Targets

LIBROOT=	pc

##Omitted
##		CATCHERR.c	\
##		PCSTART.c	\
##		PCIO.c		\
##

LIBCSOURCES=\
		ACTFILE.c	\
		ADDT.c		\
		APPEND.c	\
		ARGV.c		\
		ASRT.c		\
		ASRTS.c		\
		ATAN.c		\
		BLKCLR.c	\
		BLKCPY.c	\
		BUFF.c		\
		CARD.c		\
		CASERNG.c	\
		CHR.c		\
		CLCK.c		\
		COS.c		\
		CTTOT.c		\
		DATE.c		\
		DEFNAME.c	\
		DFDISPOSE.c	\
		DISPOSE.c	\
		ERROR.c		\
		EXCEPT.c	\
		EXP.c		\
		EXPO.c		\
		FCALL.c		\
		FLUSH.c		\
		FNIL.c		\
		FRTN.c		\
		FSAV.c		\
		GET.c		\
		GETNAME.c	\
		HALT.c		\
		IN.c		\
		INCT.c		\
		IOSYNC.c	\
		LINO.c		\
		LLIMIT.c	\
		LN.c		\
		MAX.c		\
		MULT.c		\
		NAM.c		\
		NEW.c		\
		NIL.c		\
		PACK.c		\
		PAGE.c		\
		PCEXIT.c	\
		PCLOSE.c	\
		PERROR.c	\
		PFCLOSE.c	\
		PFLUSH.c	\
		PMFLUSH.c	\
		PRED.c		\
		PUT.c		\
		RANDOM.c	\
		RANG4.c		\
		READ4.c		\
		READ8.c		\
		READC.c		\
		READE.c		\
		READLN.c	\
		RELEQ.c		\
		RELNE.c		\
		RELSGE.c	\
		RELSGT.c	\
		RELSLE.c	\
		RELSLT.c	\
		RELTGE.c	\
		RELTGT.c	\
		RELTLE.c	\
		RELTLT.c	\
		REMOVE.c	\
		RESET.c		\
		REWRITE.c	\
		ROUND.c		\
		RSNG4.c		\
		SCLCK.c		\
		SEED.c		\
		SEEK.c		\
		SIN.c		\
		SQRT.c		\
		STLIM.c		\
		SUBSC.c		\
		SUBSCZ.c	\
		SUBT.c		\
		SUCC.c		\
		TELL.c		\
		TEOF.c		\
		TEOLN.c		\
		TIME.c		\
		TRUNC.c		\
		UNIT.c		\
		UNPACK.c	\
		UNSYNC.c	\
		VWRITEF.c	\
		WRITEC.c	\
		WRITEF.c	\
		WRITES.c	\
		WRITLN.c

LIBOBJS=	$(addprefix $(D_OBJ)/,$(subst .c,$(O),$(LIBCSOURCES)))

LIBRARY=	$(D_LIB)/$(LP)$(LIBROOT)$(A)


#########################################################################################
# Rules

.PHONY:			build release debug
build:			$(LIBRARY)

release:
		$(MAKE) BUILD_TYPE=release $(filter-out release, $(MAKECMDGOALS))
debug:
		$(MAKE) BUILD_TYPE=debug $(filter-out debug, $(MAKECMDGOALS))

$(LIBRARY):		$(D_OBJ)/.created $(LIBOBJS)
		$(RM) $(RMFLAGS) $@
		$(AR) $(ARFLAGS) $@ $(LIBOBJS)
		$(RANLIB) $@

$(D_OBJ)/.created:
		-@mkdir $(D_OBJ)
		@echo "do not delete, make managed content" > $@

clean:
		@echo $(BUILD_TYPE) clean
		-@$(RM) $(RMFLAGS) $(BAK) $(LIBRARY) $(LIBOBJS) $(CLEAN) $(XCLEAN) >/dev/null 2>&1

$(D_OBJ)/%$(O): 	%$(C)
		$(CC) $(CFLAGS) -o $@ -c $<

#end

