# -*- mode: mak; indent-tabs-mode: t; tab-width: 8 -*-
# $Id: Makefile.in,v 1.1 2020/05/28 18:03:32 cvsuser Exp $
# flex makefile.
#
#
# Copyright (c) 2020, Adam Young.
# All rights reserved.
#
# The applications are free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# Redistributions of source code must retain the above copyright
# notice, and must be distributed with the license document above.
#
# Redistributions in binary form must reproduce the above copyright
# notice, and must include the license document above in
# the documentation and/or other materials provided with the
# distribution.
#
# The applications are distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# ==end==
#

@SET_MAKE@
ROOT=		@abs_top_builddir@
top_builddir=	@top_builddir@

# File extensions

C=		.c
E=
O=		.o
H=		.h

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Compilers, programs

CC=		@CC@
MV=		@MV@
RM=		@RM@

# Common flags

XFLAGS=
COPT=		@CFLAGS@
CWARN=		@CWARN@
CDEBUG=		@CDEBUG@
LDEBUG=		@LDEBUG@
CINCLUDE=	-I$(D_INC) -I. @CINCLUDE@
CEXTRA=		@DEFS@
CFLAGS=		$(CDEBUG) $(COPT) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
CNFLAGS=	$(CDEBUG) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDEBUG) @LDFLAGS@
LXFLAGS=	$(LDLIBS)

RMFLAGS=	-f

# Directories

D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@
D_INC=		$(ROOT)/include
D_OBJ=		$(ROOT)/objects@TOOLCHAINEXT@/flex
D_LIB=		$(ROOT)/lib@TOOLCHAINEXT@
XFLAGS=

############################################################

FLEXSRC=	./flex-2.5.2

VPATH=		$(FLEXSRC)
CFLAGS+=	-I$(FLEXSRC)

BINS=\
	$(D_BIN)/flex$(E)

FLEX_CSOURCE=\
	ccl.c dfa.c ecs.c gen.c main.c misc.c nfa.c parse.c \
	scan.c skel.c sym.c tblcmp.c yylex.c

FLEX_OBJS=	$(addprefix $(D_OBJ)/,$(subst .c,$(O),$(FLEX_CSOURCE)))

LDLIBS=		-L$(D_LIB)

CLEANOBJS=	$(FLEX_OBJS)
CLEANFILES=	parse.c parse.h

#########################################################################################

all:			directories $(BINS)

$(D_BIN)/flex$(E):	MAPFILE=$(basename $@).map
$(D_BIN)/flex$(E):	$(FLEX_OBJS)
		$(CC) $(LDFLAGS) -o $@ $(FLEX_OBJS) $(LXFLAGS) @LDMAPFILE@

parse.h:		parse.c

parse.c:		$(FLEXSRC)/parse.y
		$(D_BIN)/byacc -d $(FLEXSRC)/parse.y
		@$(MV) ytab.c parse.c
		@$(MV) ytab.h parse.h

directories:		$(D_OBJ)/.created

$(D_OBJ)/.created:
		-@mkdir $(D_OBJ)
		@echo "do not delete" > $@

clean:
		-@$(RM) $(RMFLAGS) $(BAK) $(BINS) $(LIBS) $(CLEAN) $(XCLEAN) >/dev/null 2>&1
		-@$(RM) $(RMFLAGS) $(CLEANOBJS) $(CLEANFILES) >/dev/null 2>&1

$(D_OBJ)/%$(O):		%$(C)
		$(CC) $(CFLAGS) -o $@ -c $<

#end
