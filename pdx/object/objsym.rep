/*-
 * Copyright (c) 1982, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)objsym.rep	8.1 (Berkeley) 6/6/93
 */

/*
 * This file contains the definition of the representation of symbolic
 * information in the object file.  The difference from this and memory
 * is that pointers are represented as short integers and line number
 * information is stored relatively where the base is found in the
 * file information.
 */

typedef struct {
    short strindex;
    char oclass;
    char oblkno;
    short typno;
    short chno;
    union {
	int offset;     /* variable address */
	long iconval;       /* integer constant value */
	double fconval;     /* floating constant value */
	struct {        /* range bounds */
	    long lower;
	    long upper;
	} orangev;
	struct {        /* address of function value, code */
	    int offset;
	    ADDRESS codeloc;
	} ofuncv;
	struct {        /* variant record info */
	    int size;
	    short vtorecno;
	    short vtagno;
	} ovarnt;
    } osymvalue;
} OBJSYM;

typedef union {
    long together;
    struct {
	short lineincr;
	unsigned short addrincr;
    } separate;
} OBJLINE;
