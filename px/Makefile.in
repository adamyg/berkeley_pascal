# -*- mode: mak; indent-tabs-mode: t; tab-width: 8 -*-
# $Id: Makefile.in,v 1.2 2020/06/13 23:30:14 cvsuser Exp $
# px makefile.
#
#
# Copyright (c) 2020, Adam Young.
# All rights reserved.
#
# You can redistribute it and/or modify it under the terms of
# the project License.
#
# Redistributions of source code must retain the above copyright
# notice, and must be distributed with the license document above.
#
# Redistributions in binary form must reproduce the above copyright
# notice, and must include the license document above in
# the documentation and/or other materials provided with the
# distribution.
#
# The WinRSH/WinSSH project is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# License for more details.
# ==end==
#

@SET_MAKE@
ROOT=		@abs_top_builddir@
top_builddir=	@top_builddir@

# File extensions

C=		.c
H=		.h
O=		.o
A=		.a
LP=		lib
E=

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Compilers, programs

CC=		@CC@
AR=		@AR@
RANLIB= 	@RANLIB@
RM=		@RM@
RMDIR=		@RMDIR@
PERL=		@PERL@

# Configuration

ifeq ("$(BUILD_TYPE)","")	#default
BUILD_TYPE=	debug
MAKEFLAGS+=	BUILD_TYPE=debug
endif
ifneq ("$(BUILD_TYPE)","release")
RTSUFFIX=d
endif

# Directories

D_INC=		$(ROOT)/include
D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@/$(BUILD_TYPE)
D_OBJ=		$(ROOT)/objects@TOOLCHAINEXT@/$(BUILD_TYPE)/px
D_LIB=		$(ROOT)/lib@TOOLCHAINEXT@/$(BUILD_TYPE)

# Common flags

XFLAGS=
CFLAGS=		@CFLAGS@
CWARN=		@CWARN@
CDEBUG=		@CDEBUG@
CRELEASE=	@CRELEASE@
LDDEBUG=	@LDDEBUG@
LDRELEASE=	@LDRELEASE@

CINCLUDE=	-I. -I..\src -I..\libpc -I$(D_INC) @CINCLUDE@

CEXTRA=		@DEFS@
ifeq ("$(BUILD_TYPE)","release")
CFLAGS+=	$(CRELEASE) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDRELEASE) @LDFLAGS@
else
CFLAGS+=	$(CDEBUG) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDDEBUG) @LDFLAGS@
endif
LDLIBS=		-L$(D_LIB) @LIBS@ -llibcompat @EXTRALIBS@

ARFLAGS=	rcv
RMFLAGS=	-f
RMDFLAGS=	-rf


#########################################################################################
# Targets

VPATH=		../src
CFLAGS+=	-Di80x86


#########################

LIBS=\
	$(D_LIB)/$(LP)px$(A)

LIBPX_CSOURCE=\
	int.c\
	interp.c\
	utilities.c\
	Version.c

LIBPX_OBJS=	$(addprefix $(D_OBJ)/,$(subst .c,$(O),$(LIBPX_CSOURCE)))


#########################

BINS=\
	$(D_BIN)/pxversion$(E) \
	$(D_BIN)/px$(E) \
	$(D_BIN)/opc$(E)

PX_CSOURCE=\
	main.c

OPC_CSOURCE=\
	opc.c

VERSION_CSOURCE=\
	pxversion.c

PX_OBJS=	$(addprefix $(D_OBJ)/,$(subst .c,$(O),$(PX_CSOURCE)))
OPC_OBJS=	$(addprefix $(D_OBJ)/,$(subst .c,$(O),$(OPC_CSOURCE)))
VERSION_OBJS=	$(addprefix $(D_OBJ)/,$(subst .c,$(O),$(VERSION_CSOURCE)))


#########################

LDLIBS=		-L$(D_LIB)

CLEAN+=		h02opcs.h Version.c

CLEANOBJS=	$(LIBPX_OBJS) $(PX_OBJS) $(OPC_OBJS) $(VERSION_OBJS)


#########################################################################################
# Rules

.PHONY:			build release debug
build:			directories h02opcs.h Version.c $(LIBS) $(BINS)

release:
		$(MAKE) BUILD_TYPE=release $(filter-out release, $(MAKECMDGOALS))
debug:
		$(MAKE) BUILD_TYPE=debug $(filter-out debug, $(MAKECMDGOALS))

h02opcs.h:		$(D_BIN)/opc$(E) ../src/OPnames.h
		$(D_BIN)/opc$(E) > $@

tsVersion.c:		$(D_BIN)/pxversion$(E)
		$(D_BIN)/pxversion$(E) > $@

$(D_LIB)/$(LP)px$(A):	$(LIBPX_OBJS)
		$(RM) $(RMFLAGS) $@
		$(AR) $(ARFLAGS) $@ $(LIBPX_OBJS)
		$(RANLIB) $@

$(D_BIN)/px$(E):	MAPFILE=$(basename $@).map
$(D_BIN)/px$(E):	LDLIBS+=-llibpx -llibpc
$(D_BIN)/px$(E):	$(PX_OBJS)
		$(CC) $(LDFLAGS) -o $@ $(PX_OBJS) $(LDLIBS) -llibcompat @LDMAPFILE@

$(D_BIN)/opc$(E):	MAPFILE=$(basename $@).map
$(D_BIN)/opc$(E):	$(OPC_OBJS)
		$(CC) $(LDFLAGS) -o $@ $(OPC_OBJS) $(LDLIBS) -llibcompat @LDMAPFILE@

$(D_BIN)/pxversion$(E):	MAPFILE=$(basename $@).map
$(D_BIN)/pxversion$(E):	$(VERSION_OBJS)
		$(CC) $(LDFLAGS) -o $@ $(VERSION_OBJS) $(LDLIBS) -llibcompat @LDMAPFILE@

directories:		$(D_OBJ)/.created

$(D_OBJ)/.created:
		-@mkdir $(D_OBJ)
		@echo "do not delete" > $@

clean:
		-@$(RM) $(RMFLAGS) $(BAK) $(BINS) $(LIBS) $(CLEAN) $(XCLEAN) >/dev/null 2>&1
		-@$(RM) $(RMFLAGS) $(CLEANOBJS) >/dev/null 2>&1

$(D_OBJ)/%$(O):		%$(C)
		$(CC) $(CFLAGS) -o $@ -c $<

#end
